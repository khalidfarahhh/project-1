<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://khalidfarahhh.github.io/project-1/feed.xml" rel="self" type="application/atom+xml" /><link href="https://khalidfarahhh.github.io/project-1/" rel="alternate" type="text/html" /><updated>2022-12-16T14:22:24-06:00</updated><id>https://khalidfarahhh.github.io/project-1/feed.xml</id><title type="html">Khalid Farah</title><subtitle>Mr. Mortensen is the best teacher</subtitle><entry><title type="html">Lesson 17-18 hacks</title><link href="https://khalidfarahhh.github.io/project-1/fastpages/markdown/2022/12/15/lesson1718hacks.html" rel="alternate" type="text/html" title="Lesson 17-18 hacks" /><published>2022-12-15T00:00:00-06:00</published><updated>2022-12-15T00:00:00-06:00</updated><id>https://khalidfarahhh.github.io/project-1/fastpages/markdown/2022/12/15/lesson1718hacks</id><author><name>Khalid farah</name></author><category term="fastpages" /><category term="markdown" /><summary type="html"><![CDATA[vocab Problem: a description of a task that may or may not be able to be solved through the use of an algorithm Instance of a problem: includes a specific input Decision problem: Problem with a binary answer (yes or no) Optimization problem: Problem with the objective of finding the BEST solution amongst many possibilities to solve a problem Decidable Problems: problems for which algorithms can be written to solve/produce a correct output for all possible inputs Undecidable Problems: problems for which no algorithms can be built that can provide a correct yes or no answer Some undecidable problems can have algorithms to solve some parts, but not all parts of the problem 1 Step Problem: When an integer is multiplied by a value(Linear) 2 Step Problem: When an integer is raised to a power of n(Exponential) 3 Step Problem: When an integer is multiplied by a value, and then raised to a power of 2(Square) 4 Step Problem: A factorial problem Constant Time: Will always take the same number of steps, no matter how large input it Linear Time: The number of steps increases in direct proportion to the input size Quadratic Time: The number of steps increase in proportion to the input size squared Exponential Time: The number of steps increase in proportion to the input size squared Polynomial time: any run time that does not increase faster than n^k which includes constant time, quadratic time, and other higher degree polynomials Superpolynomial time: any run time that does increase faster than n^k which includes Exponential time and factorial time Reasonable Time: Algorithms with a polynomial efficiency or lower (constant, linear, square, cube, etc.) Unreasonable Time: Algorithms with exponential or factorial efficiencies Notes Algorithms with a polynomial efficiency or slower (constant, linear, square, cube, etc.) are said to run in a reasonable amount of time. Algorithms with exponential or factorial efficiencies are examples of algorithms that run in an unreasonable amount of time. Some problems can not be solved in a reasonable amount of time, so when this is the case, an approximate solution is found.]]></summary></entry><entry><title type="html">Lesson 16 hacks</title><link href="https://khalidfarahhh.github.io/project-1/fastpages/markdown/2022/12/15/group17hacks.html" rel="alternate" type="text/html" title="Lesson 16 hacks" /><published>2022-12-15T00:00:00-06:00</published><updated>2022-12-15T00:00:00-06:00</updated><id>https://khalidfarahhh.github.io/project-1/fastpages/markdown/2022/12/15/group17hacks</id><author><name>Khalid farah</name></author><category term="fastpages" /><category term="markdown" /><summary type="html"><![CDATA[Answer Table Question Answer Name(First+Last) Khalid Farah 1 woo 2 raunak 3 C- To make the simulation more accurate 4 C- Imperfections on aircraft 5 C Situation considered 6 A- simulation, because it’s too dangerous to have this be an experiment 7 A- simulation, we don’t want to experiment with this because it could cause great harm on the environment 8 raunak 9 B- experiment/calculation because there is no need to simulate anything, this will only be a simple calculation of the average]]></summary></entry><entry><title type="html">First Jupyter Notebook</title><link href="https://khalidfarahhh.github.io/project-1/jupyter/2022/12/15/_08_21_1st_Notebook-(1).html" rel="alternate" type="text/html" title="First Jupyter Notebook" /><published>2022-12-15T00:00:00-06:00</published><updated>2022-12-15T00:00:00-06:00</updated><id>https://khalidfarahhh.github.io/project-1/jupyter/2022/12/15/_08_21_1st_Notebook-(1)</id><author><name></name></author><category term="jupyter" /><summary type="html"><![CDATA[In this notebook, I'll print Hello class]]></summary></entry><entry><title type="html">HTML Fragments and Javascript Kernel</title><link href="https://khalidfarahhh.github.io/project-1/collegeboard/2022/12/15/HTMLFrag+JSkernel.html" rel="alternate" type="text/html" title="HTML Fragments and Javascript Kernel" /><published>2022-12-15T00:00:00-06:00</published><updated>2022-12-15T00:00:00-06:00</updated><id>https://khalidfarahhh.github.io/project-1/collegeboard/2022/12/15/HTMLFrag+JSkernel</id><author><name>Khalid Farah</name></author><category term="collegeboard" /><category term="python" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Leesson 14-15 hacks</title><link href="https://khalidfarahhh.github.io/project-1/fastpages/markdown/2022/12/14/emmachenhw.html" rel="alternate" type="text/html" title="Leesson 14-15 hacks" /><published>2022-12-14T00:00:00-06:00</published><updated>2022-12-14T00:00:00-06:00</updated><id>https://khalidfarahhh.github.io/project-1/fastpages/markdown/2022/12/14/emmachenhw</id><author><name>Khalid farah</name></author><category term="fastpages" /><category term="markdown" /><summary type="html"><![CDATA[Reflection I learned about documentation, libraries, and APIs. Documentation is a part of the AP Exam project part and it requires explaining what and how your code works. Libraries help make your coding experience more efficient because they are pre-written and you can reference them throughout your code. I researched one library that utilizes Python: numPy, which works with arrays.]]></summary></entry></feed>